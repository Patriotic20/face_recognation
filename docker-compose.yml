version: "3.9"

services:
  hikivisionconnection:
    build:
      context: ./HikiVisionConnection

    image: hikivisionconnection:latest
    container_name: HikiVisionConnection
    depends_on:
      rabbitmq:
        condition: service_healthy
    network_mode: "host"
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
    volumes:
      - ./HikiVisionConnection:/app

  hikivisionfastapi:
    build:
      context: ./HikiVisionFastApi
    image: hikivisionfastapi:latest
    container_name: HikiVisionFastApi
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      APP_CONFIG__DB__URL: postgresql+asyncpg://db:face_reg@postgres:5432/db
      # â†‘ matches postgres container config
    volumes:
      - ./HikiVisionFastApi:/app
    ports:
      - "8000:8000"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  postgres:
    image: postgres:16
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: db
      POSTGRES_PASSWORD: face_reg
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U db -d db"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
